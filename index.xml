<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chihaya</title>
    <link>https://chihaya.io/index.xml</link>
    <description>Recent content on chihaya</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Chihaya Authors. Released under the BSD 2-Clause License</copyright>
    <lastBuildDate>Mon, 07 Nov 2016 12:31:10 +0100</lastBuildDate>
    <atom:link href="https://chihaya.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Deniability Middleware</title>
      <link>https://chihaya.io/docs/v2/middleware/deniability/</link>
      <pubDate>Mon, 07 Nov 2016 12:31:10 +0100</pubDate>
      
      <guid>https://chihaya.io/docs/v2/middleware/deniability/</guid>
      <description>

&lt;p&gt;This package provides the PreHook &lt;code&gt;deniability&lt;/code&gt; which inserts ghost peers into announce responses and increases scrape counters to achieve plausible deniability.&lt;/p&gt;

&lt;h2 id=&#34;functionality&#34;&gt;Functionality&lt;/h2&gt;

&lt;h3 id=&#34;for-announces&#34;&gt;For Announces&lt;/h3&gt;

&lt;p&gt;This middleware will choose random announces and modify the list of peers returned.
A random number of randomly generated peers will be inserted at random positions into the list of peers.
As soon as the length of the list of peers exceeds &lt;code&gt;numWant&lt;/code&gt;, peers will be replaced rather than inserted.&lt;/p&gt;

&lt;p&gt;Also note that the IP address for the generated peeer consists of bytes in the range [1,254].
Whether IPv4 or IPv6 addresses are generated depends on the announcing Peer&amp;rsquo;s IP.&lt;/p&gt;

&lt;p&gt;Note that if a response is picked for augmentation, at least one Peer will be inserted.
There is one exception to this rule:
Otherwise empty reponse will not be augmented to make it more difficult to determine the prefixes used for generated Peers.&lt;/p&gt;

&lt;h3 id=&#34;for-scrapes&#34;&gt;For Scrapes&lt;/h3&gt;

&lt;p&gt;A scrape will randomly be chosen, based on the &lt;code&gt;modify_response_probability&lt;/code&gt;.
If chosen, a number of seeders and leechers will be generated for every InfoHash of the scrape.&lt;/p&gt;

&lt;p&gt;Note that there will be at least one peer added to every InfoHash, this can be either a seeder or a leecher.
As with Announces, the only exception to this rule are otherwise empty scrapes.&lt;/p&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;This middleware provides the following parameters for configuration:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;modify_response_probability&lt;/code&gt; (float, &amp;gt;0, &amp;lt;= 1) indicates the probability by which a response will be augmented.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max_random_peers&lt;/code&gt; (int, &amp;gt;0) sets an upper boundary (inclusive) for the amount of peers added.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prefix&lt;/code&gt; (string, 20 characters at most) sets the prefix for generated peer IDs.&lt;br /&gt;
The peer ID will be padded to 20 bytes using a random string of numeric characters.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;min_port&lt;/code&gt; (int, &amp;gt;0, &amp;lt;=65535) sets a lower boundary for the port for generated peers.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max_port&lt;/code&gt; (int, &amp;gt;0, &amp;lt;=65536, &amp;gt; &lt;code&gt;min_port&lt;/code&gt;) sets an upper boundary for the port for generated peers.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parallelism&lt;/code&gt; (int, &amp;gt;=0) determines the amount of parallelism this hook can operate with.&lt;br /&gt;
The resulting theoretical upper limit of parallelism is &lt;code&gt;2^parallelism)&lt;/code&gt;, assuming an even random distribution of infohashes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An example config might look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chihaya:
  prehooks:
    - name: deniability
      config:
        modify_response_probability: 0.2
        max_random_peers: 5
        prefix: -AZ2060-
        min_port: 40000
        max_port: 60000
        parallelism: 8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For more information about peer IDs and their prefixes, see &lt;a href=&#34;https://wiki.theory.org/BitTorrentSpecification#peer_id&#34;&gt;this wiki entry&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Announce Interval Variation Middleware</title>
      <link>https://chihaya.io/docs/v2/middleware/varinterval/</link>
      <pubDate>Sun, 06 Nov 2016 22:21:52 +0100</pubDate>
      
      <guid>https://chihaya.io/docs/v2/middleware/varinterval/</guid>
      <description>

&lt;p&gt;This package provides the announce middleware &lt;code&gt;interval variation&lt;/code&gt; which randomizes the announce interval.&lt;/p&gt;

&lt;h2 id=&#34;functionality&#34;&gt;Functionality&lt;/h2&gt;

&lt;p&gt;This middleware chooses random announces and modifies the &lt;code&gt;interval&lt;/code&gt; and &lt;code&gt;min_interval&lt;/code&gt; fields.
A random number of seconds are added to the &lt;code&gt;interval&lt;/code&gt; field and, if desired, also to the &lt;code&gt;min_interval&lt;/code&gt; field.&lt;/p&gt;

&lt;p&gt;Note that if a response is picked for modification and &lt;code&gt;min_interval&lt;/code&gt; should be changed as well, both &lt;code&gt;interval&lt;/code&gt; and &lt;code&gt;min_interval&lt;/code&gt; are modified by the same amount.&lt;/p&gt;

&lt;h2 id=&#34;use-case&#34;&gt;Use Case&lt;/h2&gt;

&lt;p&gt;Use this middleware to avoid recurring load spikes on the tracker.
By randomizing the announce interval, load spikes will flatten out after a few announce cycles.&lt;/p&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;This middleware provides the following parameters for configuration:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;modify_response_probability&lt;/code&gt; (float, &amp;gt;0, &amp;lt;= 1) indicates the probability by which a response will be chosen to have its announce intervals modified.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max_increase_delta&lt;/code&gt; (int, &amp;gt;0) sets an upper boundary (inclusive) for the amount of seconds added.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;modify_min_interval&lt;/code&gt; (boolean) whether to modify the &lt;code&gt;min_interval&lt;/code&gt; field as well.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An example config might look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chihaya:
  prehooks:
    - name: interval variation
      config:
        modify_response_probability: 0.2
        max_increase_delta: 60
        modify_min_interval: true 
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Chihaya v2 Documentation</title>
      <link>https://chihaya.io/docs/v2/</link>
      <pubDate>Sun, 06 Nov 2016 22:13:20 +0100</pubDate>
      
      <guid>https://chihaya.io/docs/v2/</guid>
      <description>

&lt;p&gt;TODO add information about architecture etc.&lt;/p&gt;

&lt;h2 id=&#34;middleware&#34;&gt;Middleware&lt;/h2&gt;

&lt;p&gt;Several hooks are already included in the Chihaya repository.&lt;/p&gt;

&lt;h3 id=&#34;interval-variation&#34;&gt;Interval Variation&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;interval variation&lt;/code&gt; PreHook adds variation to the announce interval.
Find more info in &lt;a href=&#34;https://chihaya.io/docs/v2/middleware/varinterval/&#34;&gt;the documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;plausible-deniability&#34;&gt;Plausible Deniability&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;deniability&lt;/code&gt; PreHook adds ghost peers into announce responses and randomly increases scrape counters to achieve plausible deniability.
Find more info in &lt;a href=&#34;https://chihaya.io/docs/v2/middleware/deniability/&#34;&gt;the documentation&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A customizible, multi-protocol BitTorrent Tracker</title>
      <link>https://chihaya.io/page/</link>
      <pubDate>Wed, 26 Oct 2016 19:15:52 -0400</pubDate>
      
      <guid>https://chihaya.io/page/</guid>
      <description>

&lt;h2 id=&#34;what-is-chihaya&#34;&gt;What is Chihaya?&lt;/h2&gt;

&lt;p&gt;Chihaya is an open source &lt;a href=&#34;http://en.wikipedia.org/wiki/BitTorrent_tracker&#34;&gt;BitTorrent Tracker&lt;/a&gt; written in the &lt;a href=&#34;https://golang.org&#34;&gt;Go programming language&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;why-chihaya&#34;&gt;Why Chihaya?&lt;/h2&gt;

&lt;p&gt;Chihaya is built for developers looking to integrate BitTorrent into a preexisting production environment.
Chihaya&amp;rsquo;s pluggable architecture and middleware framework offers a simple and flexible integration point that abstracts the BitTorrent tracker protocols.
The most common use case for Chihaya is integration with the deployment of cloud software.&lt;/p&gt;

&lt;h2 id=&#34;who-s-using-chihaya&#34;&gt;Who&amp;rsquo;s using Chihaya&lt;/h2&gt;

&lt;table&gt;
  &lt;td&gt;
    &lt;svg width=&#34;50px&#34; height=&#34;50px&#34; viewBox=&#34;0 0 256 256&#34; version=&#34;1.1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; preserveAspectRatio=&#34;xMidYMid&#34;&gt;
      &lt;g&gt;
        &lt;path d=&#34;M241.871,256.001 C249.673,256.001 256,249.675 256,241.872 L256,14.129 C256,6.325 249.673,0 241.871,0 L14.129,0 C6.324,0 0,6.325 0,14.129 L0,241.872 C0,249.675 6.324,256.001 14.129,256.001 L241.871,256.001&#34; fill=&#34;#395185&#34;&gt;&lt;/path&gt;
        &lt;path d=&#34;M176.635,256.001 L176.635,156.864 L209.912,156.864 L214.894,118.229 L176.635,118.229 L176.635,93.561 C176.635,82.375 179.742,74.752 195.783,74.752 L216.242,74.743 L216.242,40.188 C212.702,39.717 200.558,38.665 186.43,38.665 C156.932,38.665 136.738,56.67 136.738,89.736 L136.738,118.229 L103.376,118.229 L103.376,156.864 L136.738,156.864 L136.738,256.001 L176.635,256.001&#34; fill=&#34;#FFFFFF&#34;&gt;&lt;/path&gt;
      &lt;/g&gt;
    &lt;/svg&gt;
  &lt;/td&gt;
  &lt;td&gt;&lt;!-- BLANK --&gt;&lt;/td&gt;
  &lt;td&gt;
    &lt;svg width=&#34;170px&#34; height=&#34;50px&#34; viewBox=&#34;0 0 512 150&#34; version=&#34;1.1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; preserveAspectRatio=&#34;xMidYMid&#34;&gt;
      &lt;g&gt;
        &lt;g&gt;
          &lt;path d=&#34;M75.2473043,0.366608696 C34.016,0.366608696 0.479304348,33.9053913 0.479304348,75.1304348 C0.479304348,116.358261 34.016,149.894957 75.2473043,149.894957 C116.466087,149.894957 150.005565,116.358261 150.005565,75.1304348 C150.005565,33.9053913 116.466087,0.366608696 75.2473043,0.366608696 L75.2473043,0.366608696 Z&#34; fill=&#34;#53A3DA&#34;&gt;&lt;/path&gt;
          &lt;path d=&#34;M75.2473043,7.22713043 C63.2243478,7.22713043 53.0274783,26.4584348 49.3446957,53.1881739 C49.2271304,54.048 49.1130435,54.9182609 49.0121739,55.794087 C48.5092174,60.0006957 48.1683478,64.3749565 47.997913,68.877913 C47.9165217,70.9384348 47.8761739,73.0212174 47.8761739,75.1304348 C47.8761739,77.2375652 47.9165217,79.3245217 47.997913,81.3808696 C48.1683478,85.8831304 48.5092174,90.2601739 49.0121739,94.4667826 C54.6497391,95.1965217 60.6775652,95.6918261 66.9648696,95.9269565 C69.6827826,96.0285217 72.4410435,96.0890435 75.248,96.0890435 C78.0466087,96.0890435 80.8132174,96.0278261 83.5227826,95.9269565 C89.8177391,95.6918261 95.8413913,95.1965217 101.483826,94.4667826 C102.104348,94.3874783 102.71513,94.3005217 103.333565,94.2107826 C126.814609,90.9133913 143.149217,83.6146087 143.149217,75.1304348 C143.148522,37.6264348 112.745043,7.22713043 75.2473043,7.22713043 L75.2473043,7.22713043 Z&#34; fill=&#34;#F1606D&#34;&gt;&lt;/path&gt;
          &lt;path d=&#34;M103.33287,56.048 C102.651826,55.0546087 101.921391,54.1029565 101.142957,53.1888696 C94.9126957,45.8448696 85.632,41.1784348 75.248,41.1784348 C71.8817391,41.1784348 68.8841739,46.3311304 66.9648696,54.3325217 C66.2024348,57.5227826 65.6104348,61.1631304 65.2292174,65.1137391 C64.9286957,68.2796522 64.7666087,71.6466087 64.7666087,75.1304348 C64.7666087,78.6142609 64.9286957,81.981913 65.2292174,85.1450435 C68.3972174,85.4455652 71.7593043,85.6069565 75.248,85.6069565 C78.7325217,85.6069565 82.0946087,85.4455652 85.2626087,85.1450435 C92.2267826,84.4841739 98.2386087,83.1450435 102.497391,81.3808696 C106.703304,79.6410435 109.192348,77.4747826 109.192348,75.1304348 C109.191652,68.0570435 107.031652,61.4873043 103.33287,56.048 L103.33287,56.048 Z&#34; fill=&#34;#FFFFFF&#34;&gt;&lt;/path&gt;
        &lt;/g&gt;
        &lt;path d=&#34;M220.445913,38.2977391 C229.200696,38.2977391 236.317913,42.5676522 240.802087,47.3843478 L233.801043,55.2633043 C230.077217,51.6514783 226.02713,49.3537391 220.55513,49.3537391 C208.841043,49.3537391 200.413913,59.2041739 200.413913,75.2953043 C200.413913,91.6069565 208.183652,101.457391 220.114783,101.457391 C226.464696,101.457391 231.172174,98.8313043 235.222261,94.3422609 L242.225391,102.112 C236.42713,108.78887 228.981565,112.512 219.895652,112.512 C201.725913,112.512 187.38713,99.378087 187.38713,75.6250435 C187.387826,52.1989565 202.054957,38.2977391 220.445913,38.2977391 L220.445913,38.2977391 Z&#34; fill=&#34;#231F20&#34;&gt;&lt;/path&gt;
        &lt;path d=&#34;M270.581565,56.1398261 C284.043826,56.1398261 296.19687,66.4306087 296.19687,84.3812174 C296.19687,102.222609 284.04313,112.512696 270.581565,112.512696 C257.22713,112.512696 245.078957,102.222609 245.078957,84.3812174 C245.078957,66.4306087 257.22713,56.1398261 270.581565,56.1398261 L270.581565,56.1398261 Z M270.581565,102.222609 C278.463304,102.222609 283.277217,95.1074783 283.277217,84.3812174 C283.277217,73.5450435 278.463304,66.4306087 270.581565,66.4306087 C262.699826,66.4306087 257.994435,73.5450435 257.994435,84.3812174 C257.994435,95.1074783 262.699826,102.222609 270.581565,102.222609 L270.581565,102.222609 Z&#34; fill=&#34;#231F20&#34;&gt;&lt;/path&gt;
        &lt;path d=&#34;M300.362435,57.4532174 L310.757565,57.4532174 L311.634087,66.9753043 L312.071652,66.9753043 C315.901913,59.970087 321.595826,56.1391304 327.286261,56.1391304 C330.025739,56.1391304 331.776696,56.4674783 333.415652,57.234087 L331.225739,68.1794783 C329.368348,67.634087 327.944348,67.3050435 325.648,67.3050435 C321.377391,67.3050435 316.229565,70.258087 312.948174,78.3610435 L312.948174,111.197913 L300.362435,111.197913 L300.362435,57.4532174 L300.362435,57.4532174 Z&#34; fill=&#34;#231F20&#34;&gt;&lt;/path&gt;
        &lt;path d=&#34;M356.953739,56.1398261 C371.512348,56.1398261 379.173565,66.6490435 379.173565,81.6473043 C379.173565,84.0528696 378.95513,86.2413913 378.626087,87.5568696 L344.476522,87.5568696 C345.568696,97.298087 351.696696,102.770087 360.345043,102.770087 C364.945391,102.770087 368.882783,101.350261 372.825739,98.8313043 L377.093565,106.710261 C371.949217,110.103652 365.49287,112.512696 358.706087,112.512696 C343.816348,112.512696 332.215652,102.112696 332.215652,84.3812174 C332.216348,66.866087 344.363826,56.1398261 356.953739,56.1398261 L356.953739,56.1398261 Z M368.226783,79.565913 C368.226783,71.0253913 364.617043,65.8817391 357.282783,65.8817391 C350.934957,65.8817391 345.459478,70.589913 344.364522,79.565913 L368.226783,79.565913 L368.226783,79.565913 Z&#34; fill=&#34;#231F20&#34;&gt;&lt;/path&gt;
        &lt;path d=&#34;M398.331826,74.8570435 C398.331826,52.0890435 410.704,37.7481739 428.105043,37.7481739 C445.401043,37.7481739 457.768348,52.0890435 457.768348,74.8570435 C457.768348,97.7363478 445.401739,112.512696 428.105043,112.512696 C410.704,112.512696 398.331826,97.7363478 398.331826,74.8570435 L398.331826,74.8570435 Z M452.514783,74.8570435 C452.514783,54.9342609 442.665739,42.3485217 428.104348,42.3485217 C413.437217,42.3485217 403.584,54.9349565 403.584,74.8570435 C403.584,94.8890435 413.437217,107.91513 428.104348,107.91513 C442.665739,107.91513 452.514783,94.8890435 452.514783,74.8570435 L452.514783,74.8570435 Z&#34; fill=&#34;#F1606D&#34;&gt;&lt;/path&gt;
        &lt;path d=&#34;M467.296,98.173913 C472.553043,104.083478 480.104348,107.91513 488.533565,107.91513 C499.477565,107.91513 506.486261,102.002783 506.486261,93.4685217 C506.486261,84.4918261 500.577391,81.5353043 493.461565,78.3610435 L482.514783,73.4344348 C476.275478,70.6963478 467.952,66.210087 467.952,55.4810435 C467.952,45.0831304 476.928696,37.7474783 488.862609,37.7474783 C497.619478,37.7474783 504.624696,41.6883478 509.001043,46.397913 L506.048696,49.7913043 C501.887304,45.3029565 496.086957,42.3478261 488.862609,42.3478261 C479.338435,42.3478261 472.990609,47.3836522 472.990609,55.2626087 C472.990609,63.584 480.214957,66.7554783 485.467826,69.1652174 L496.416,73.9798261 C504.406261,77.5937391 511.520696,82.082087 511.520696,93.1373913 C511.520696,104.192696 502.434783,112.512 488.424348,112.512 C477.91513,112.512 469.815652,108.024348 464.123826,101.676522 L467.296,98.173913 L467.296,98.173913 Z&#34; fill=&#34;#53A4D9&#34;&gt;&lt;/path&gt;
      &lt;/g&gt;
    &lt;/svg&gt;
  &lt;/td&gt;
&lt;/table&gt;
</description>
    </item>
    
  </channel>
</rss>